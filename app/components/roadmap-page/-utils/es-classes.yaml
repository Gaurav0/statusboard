- name: ES Classes
  summary: |
    Use native class syntax interchangeably with the Ember Object model.
  description: |
    Native ES classes are advancing quickly, with features like [class
    fields](https://github.com/tc39/proposal-class-fields),
    private [fields](https://github.com/tc39/proposal-class-fields#private-fields)
    and [methods](https://github.com/tc39/proposal-private-methods),
    and [decorators](https://github.com/tc39/proposal-decorators) just around the
    corner. At the same time, more and more tooling is being developed for the
    syntax, from developer tools and editors to documentation generators and
    more. Ember has always been about shared solutions, and transitioning to the
    modern native class syntax is no exception!

    As it turns out, the existing object model is already highly cross-compatible
    with the new class syntax. The [ES Class
    RFC](https://github.com/emberjs/rfcs/blob/master/text/0240-es-classes.md)
    outlined a path forward that required few changes to the existing object model,
    mostly around fixing broken features such as observers and event listeners,
    and allowing "zebra-striping" - being able to go back and forth between native
    classes and EmberObject based classes using the old style.

    The RFC also touched on decorators, but didn't specify any to be added to Ember
    directly yet. Instead, it encouraged continued exploration by addons such as
    the long running [ember-decorators](https://github.com/ember-decorators)
    project, which has been experimenting with decorators since they were first
    proposed and is continuing to evolve their syntax and usage. Over time addons
    like these will be the basis for a set of decorators in Ember, similar to how
    [ember-native-dom-helpers paved the way for modern testing helpers](https://github.com/emberjs/rfcs/blob/master/text/0268-acceptance-testing-refactor.md#dom-interaction-helpers).

    The [first PR to update CoreObject](https://github.com/emberjs/ember.js/pull/15594)
    landed recently, and there is a [work in progress PR](https://github.com/emberjs/ember.js/pull/16184)
    to fix extending back-and-forth between native classes and legacy classes. A [quest
    issue](https://github.com/emberjs/ember.js/issues/16134) was also opened recently
    to guage usage of certain features in services to determine what was needed to
    support them. Once these issues have been addressed, we can continue to fix
    other broken features.
  status: in-development
  statusText: In Implementation
  availability: Not yet available.
  resources:
    - type: rfc
      name: ES Class RFC
      url: https://github.com/emberjs/rfcs/blob/master/text/0240-es-classes.md
    - type: blogpost
      name: Class Usage Today
      url: https://medium.com/build-addepar/es-classes-in-ember-js-63e948e9d78e
    - type: quest
      name: "Quest Issue"
      url: https://github.com/emberjs/ember.js/issues/16134
  champions:
    - name: Robert Jackson
      image: https://avatars2.githubusercontent.com/u/12637?v=4&s=460
      url: https://github.com/wycats
    - name: Yehuda Katz
      image: https://avatars0.githubusercontent.com/u/4?s=460&v=4
      url: https://github.com/rwjblue
